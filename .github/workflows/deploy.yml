name: Deploy Darwin Lecture-to-Text

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: asia-northeast1
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run tests
        run: |
          pytest tests/ --cov=src --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker
        run: gcloud auth configure-docker

      - name: Build and push Docker image
        run: |
          docker build -t gcr.io/$GCP_PROJECT_ID/darwin-api:$GITHUB_SHA .
          docker push gcr.io/$GCP_PROJECT_ID/darwin-api:$GITHUB_SHA

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy darwin-api \
            --image gcr.io/$GCP_PROJECT_ID/darwin-api:$GITHUB_SHA \
            --platform managed \
            --region $GCP_REGION \
            --allow-unauthenticated \
            --memory 2Gi \
            --cpu 2 \
            --max-instances 10 \
            --min-instances 0 \
            --concurrency 100 \
            --timeout 3600 \
            --set-env-vars GCP_PROJECT_ID=$GCP_PROJECT_ID

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'

      - name: Setup CloudFlare DNS
        run: |
          python scripts/setup_cloudflare.py

  deploy-staging:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker
        run: gcloud auth configure-docker

      - name: Build and push Docker image
        run: |
          docker build -t gcr.io/$GCP_PROJECT_ID/darwin-api-staging:$GITHUB_SHA .
          docker push gcr.io/$GCP_PROJECT_ID/darwin-api-staging:$GITHUB_SHA

      - name: Deploy to Cloud Run (Staging)
        run: |
          gcloud run deploy darwin-api-staging \
            --image gcr.io/$GCP_PROJECT_ID/darwin-api-staging:$GITHUB_SHA \
            --platform managed \
            --region $GCP_REGION \
            --allow-unauthenticated \
            --memory 1Gi \
            --cpu 1 \
            --max-instances 5 \
            --min-instances 0 \
            --concurrency 50 \
            --timeout 1800 \
            --set-env-vars GCP_PROJECT_ID=$GCP_PROJECT_ID

      - name: Deploy to Vercel (Staging)
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--target preview'
